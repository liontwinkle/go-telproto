syntax = "proto3";

package traceprotobuf;

import "trace.proto";

option java_multiple_files = true;
option java_package = "io.opencensus.proto.trace.v1";
option java_outer_classname = "TraceProto";

option ruby_package = "OpenCensus.Proto.Trace.V1";

message HelloRequest {
  int32 client_ver = 1;
}

message HelloResponse {
  int32 server_ver = 1;
}

// A request from client to server containing telemetry data to export.
message ExportRequest {
  // Unique sequential ID generated by the client.
  uint64 id = 1;

  // Telemetry data.
  repeated Span spans = 2;
  repeated Metric metrics = 3;
}

// A response to ExportRequest.
message ExportResponse {
  // ID of a response that the server acknowledges.
  uint64 id = 1;
}

enum CompressionMethod {
    NONE = 0;
    LZ4 = 1;
    ZLIB = 2;
}

// RequestHeader is used by transports that unlike gRPC don't have built-in request
// compression such as WebSocket. Request body typically follows the header.
message RequestHeader {
  // Compression method used for body.
  CompressionMethod compression = 1;
  // Compression level as defined by the compression method.
  int32 compression_level = 2;
}

// RequestBody is used by transports that unlike gRPC don't have built-in request type
// multiplexing such as WebSocket.
message RequestBody {
  oneof body {
    ExportRequest export = 1;
    HelloRequest hello = 2;
  }
}
