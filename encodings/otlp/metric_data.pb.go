// Code generated by protoc-gen-go. DO NOT EDIT.
// source: metric_data.proto

package otlp

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Type of the metric. It describes how the data is reported.
//
// A gauge is an instantaneous measurement of a value.
//
// A counter/cumulative measurement is a value accumulated over a time
// interval. In a time series, cumulative measurements should have the same
// start time, increasing values, until an event resets the cumulative value
// to zero and sets a new start time for the subsequent points.
type MetricDescriptor_Type int32

const (
	// Do not use this default value.
	MetricDescriptor_UNSPECIFIED MetricDescriptor_Type = 0
	// Integer gauge. The value can go both up and down over time.
	// Corresponding values are stored in GaugeInt64TimeSeriesList.
	MetricDescriptor_GAUGE_INT64 MetricDescriptor_Type = 1
	// Floating point gauge. The value can go both up and down over time.
	// Corresponding values are stored in GaugeDoubleTimeSeriesList.
	MetricDescriptor_GAUGE_DOUBLE MetricDescriptor_Type = 2
	// Histogram gauge measurement.
	// Used in scenarios like a snapshot of time that current items in a queue
	// have spent there.
	// Corresponding values are stored in HistogramTimeSeriesList. The count and sum of the
	// histogram can go both up and down over time. Recorded values are always >= 0.
	MetricDescriptor_GAUGE_HISTOGRAM MetricDescriptor_Type = 3
	// Integer counter measurement. The value cannot decrease; if value is reset then
	// CounterInt64Value.start_time_unixnano should also be reset.
	// Corresponding values are stored in CounterInt64TimeSeriesList.
	MetricDescriptor_COUNTER_INT64 MetricDescriptor_Type = 4
	// Floating point counter measurement. The value cannot decrease, if
	// resets then the CounterDoubleValue.start_time_unixnano should also be reset.
	// Recorded values are always >= 0.
	// Corresponding values are stored in CounterDoubleTimeSeriesList.
	MetricDescriptor_COUNTER_DOUBLE MetricDescriptor_Type = 5
	// Histogram cumulative measurement.
	// Corresponding values are stored in HistogramTimeSeriesList. The count and sum of the
	// histogram cannot decrease; if values are reset then HistogramValue.start_time_unixnano
	// should also be reset to the new start timestamp.
	MetricDescriptor_CUMULATIVE_HISTOGRAM MetricDescriptor_Type = 6
	// Summary value. Some frameworks implemented Histograms as a summary of observations
	// (usually things like request durations and response sizes). While it
	// also provides a total count of observations and a sum of all observed
	// values, it calculates configurable percentiles over a sliding time
	// window.
	// Corresponding values are stored in SummaryTimeSeriesList.
	MetricDescriptor_SUMMARY MetricDescriptor_Type = 7
)

var MetricDescriptor_Type_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "GAUGE_INT64",
	2: "GAUGE_DOUBLE",
	3: "GAUGE_HISTOGRAM",
	4: "COUNTER_INT64",
	5: "COUNTER_DOUBLE",
	6: "CUMULATIVE_HISTOGRAM",
	7: "SUMMARY",
}

var MetricDescriptor_Type_value = map[string]int32{
	"UNSPECIFIED":          0,
	"GAUGE_INT64":          1,
	"GAUGE_DOUBLE":         2,
	"GAUGE_HISTOGRAM":      3,
	"COUNTER_INT64":        4,
	"COUNTER_DOUBLE":       5,
	"CUMULATIVE_HISTOGRAM": 6,
	"SUMMARY":              7,
}

func (x MetricDescriptor_Type) String() string {
	return proto.EnumName(MetricDescriptor_Type_name, int32(x))
}

func (MetricDescriptor_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{2, 0}
}

// A list of metrics from a Resource.
type ResourceMetrics struct {
	Resource             *Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Metrics              []*Metric `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ResourceMetrics) Reset()         { *m = ResourceMetrics{} }
func (m *ResourceMetrics) String() string { return proto.CompactTextString(m) }
func (*ResourceMetrics) ProtoMessage()    {}
func (*ResourceMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{0}
}

func (m *ResourceMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceMetrics.Unmarshal(m, b)
}
func (m *ResourceMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceMetrics.Marshal(b, m, deterministic)
}
func (m *ResourceMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceMetrics.Merge(m, src)
}
func (m *ResourceMetrics) XXX_Size() int {
	return xxx_messageInfo_ResourceMetrics.Size(m)
}
func (m *ResourceMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceMetrics proto.InternalMessageInfo

func (m *ResourceMetrics) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *ResourceMetrics) GetMetrics() []*Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

// Defines a Metric which has one or more timeseries.
//
// The data model and relation between entities is shown in the diagram below.
//
// - Metric is composed of a Resource, a MetricDescriptor and a TimeSeriesList data.
// - MetricDescriptor contains a list of label keys (shown horizontally).
// - TimeSeriesList is composed of a list of TimeSeries (shown vertically).
// - TimeSeries contains a list of label values and a list of metric values (shown
//   horizontally).
//
//     Metric
//  +----------+         +--------+
//  |  resource|-------->|Resource|
//  |          |         +--------+
//  |          |
//  |          |         +------------------------+
//  |descriptor|-------->| MetricDescriptor       |
//  |          |         |+-----+-----+   +-----+ |
//  |          |         ||label|label|...|label| |
//  |      data|--+      ||key1 |key2 |   |keyN | |
//  +----------+  |      |+-----+-----+   +-----+ |
//                |      +------------------------+
//                |
//                |      +------------------------------+
//                |      |TimeSeries 1                  |
//                v      |+-----+-----+   +-----+       |
//             +-----+   ||label|label|...|label|       |
//             |  1  |-->|+-----+-----+   +-----+       |
//             +-----+   |+-----+-----+-----+   +-----+ |
//             |  .  |   ||value|value|value|...|value| |
//             |  .  |   |+-----+-----+-----+   +-----+ |
//             |  .  |   +------------------------------+
//             |  .  |                   .
//             |  .  |                   .
//             |  .  |                   .
//             |  .  |   +-----------------------------------+
//             |  .  |   |TimeSeries N                       |
//             +-----+   |+-----+-----+   +-----+            |
//             |  N  |-->||label|label|...|label|            |
//             +-----+   |+-----+-----+   +-----+            |
//                       |+-----+-----+-----+-----+   +-----+|
//                       ||value|value|value|value|...|value||
//                       |+-----+-----+-----+-----+   +-----+|
//                       +-----------------------------------+
//
type Metric struct {
	// metric_descriptor describes the Metric.
	MetricDescriptor *MetricDescriptor `protobuf:"bytes,1,opt,name=metric_descriptor,json=metricDescriptor,proto3" json:"metric_descriptor,omitempty"`
	// resource that is associated with this metric. Optional. If not set, this metric
	// should be part of a ResourceMetrics message that does include the resource
	// information, unless resource information is unknown.
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	// data is a list of one or more TimeSeries for a single metric, where each timeseries has
	// one or more points. Only one of the following fields is used for the data, depending on
	// the type of the metric defined by MetricDescriptor.type field.
	//
	// Types that are valid to be assigned to Data:
	//	*Metric_GaugeInt64Data
	//	*Metric_GaugeDoubleData
	//	*Metric_CounterInt64Data
	//	*Metric_CounterDoubleData
	//	*Metric_HistogramData
	//	*Metric_SummaryData
	Data                 isMetric_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Metric) Reset()         { *m = Metric{} }
func (m *Metric) String() string { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()    {}
func (*Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{1}
}

func (m *Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metric.Unmarshal(m, b)
}
func (m *Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metric.Marshal(b, m, deterministic)
}
func (m *Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metric.Merge(m, src)
}
func (m *Metric) XXX_Size() int {
	return xxx_messageInfo_Metric.Size(m)
}
func (m *Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Metric proto.InternalMessageInfo

func (m *Metric) GetMetricDescriptor() *MetricDescriptor {
	if m != nil {
		return m.MetricDescriptor
	}
	return nil
}

func (m *Metric) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

type isMetric_Data interface {
	isMetric_Data()
}

type Metric_GaugeInt64Data struct {
	GaugeInt64Data *GaugeInt64TimeSeriesList `protobuf:"bytes,3,opt,name=gauge_int64_data,json=gaugeInt64Data,proto3,oneof"`
}

type Metric_GaugeDoubleData struct {
	GaugeDoubleData *GaugeDoubleTimeSeriesList `protobuf:"bytes,4,opt,name=gauge_double_data,json=gaugeDoubleData,proto3,oneof"`
}

type Metric_CounterInt64Data struct {
	CounterInt64Data *CounterInt64TimeSeriesList `protobuf:"bytes,5,opt,name=counter_int64_data,json=counterInt64Data,proto3,oneof"`
}

type Metric_CounterDoubleData struct {
	CounterDoubleData *CounterDoubleTimeSeriesList `protobuf:"bytes,6,opt,name=counter_double_data,json=counterDoubleData,proto3,oneof"`
}

type Metric_HistogramData struct {
	HistogramData *HistogramTimeSeriesList `protobuf:"bytes,7,opt,name=histogram_data,json=histogramData,proto3,oneof"`
}

type Metric_SummaryData struct {
	SummaryData *SummaryTimeSeriesList `protobuf:"bytes,8,opt,name=summary_data,json=summaryData,proto3,oneof"`
}

func (*Metric_GaugeInt64Data) isMetric_Data() {}

func (*Metric_GaugeDoubleData) isMetric_Data() {}

func (*Metric_CounterInt64Data) isMetric_Data() {}

func (*Metric_CounterDoubleData) isMetric_Data() {}

func (*Metric_HistogramData) isMetric_Data() {}

func (*Metric_SummaryData) isMetric_Data() {}

func (m *Metric) GetData() isMetric_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Metric) GetGaugeInt64Data() *GaugeInt64TimeSeriesList {
	if x, ok := m.GetData().(*Metric_GaugeInt64Data); ok {
		return x.GaugeInt64Data
	}
	return nil
}

func (m *Metric) GetGaugeDoubleData() *GaugeDoubleTimeSeriesList {
	if x, ok := m.GetData().(*Metric_GaugeDoubleData); ok {
		return x.GaugeDoubleData
	}
	return nil
}

func (m *Metric) GetCounterInt64Data() *CounterInt64TimeSeriesList {
	if x, ok := m.GetData().(*Metric_CounterInt64Data); ok {
		return x.CounterInt64Data
	}
	return nil
}

func (m *Metric) GetCounterDoubleData() *CounterDoubleTimeSeriesList {
	if x, ok := m.GetData().(*Metric_CounterDoubleData); ok {
		return x.CounterDoubleData
	}
	return nil
}

func (m *Metric) GetHistogramData() *HistogramTimeSeriesList {
	if x, ok := m.GetData().(*Metric_HistogramData); ok {
		return x.HistogramData
	}
	return nil
}

func (m *Metric) GetSummaryData() *SummaryTimeSeriesList {
	if x, ok := m.GetData().(*Metric_SummaryData); ok {
		return x.SummaryData
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Metric) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Metric_GaugeInt64Data)(nil),
		(*Metric_GaugeDoubleData)(nil),
		(*Metric_CounterInt64Data)(nil),
		(*Metric_CounterDoubleData)(nil),
		(*Metric_HistogramData)(nil),
		(*Metric_SummaryData)(nil),
	}
}

// Defines a metric type and its schema.
type MetricDescriptor struct {
	// name of the metric, including its DNS name prefix. It must be unique.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// description of the metric, which can be used in documentation.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// unit in which the metric value is reported. Follows the format
	// described by http://unitsofmeasure.org/ucum.html.
	Unit string                `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	Type MetricDescriptor_Type `protobuf:"varint,4,opt,name=type,proto3,enum=otlp.MetricDescriptor_Type" json:"type,omitempty"`
	// The label keys associated with the metric descriptor. Keys in this list must
	// be unique.
	LabelKeys            []string `protobuf:"bytes,5,rep,name=label_keys,json=labelKeys,proto3" json:"label_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricDescriptor) Reset()         { *m = MetricDescriptor{} }
func (m *MetricDescriptor) String() string { return proto.CompactTextString(m) }
func (*MetricDescriptor) ProtoMessage()    {}
func (*MetricDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{2}
}

func (m *MetricDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricDescriptor.Unmarshal(m, b)
}
func (m *MetricDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricDescriptor.Marshal(b, m, deterministic)
}
func (m *MetricDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricDescriptor.Merge(m, src)
}
func (m *MetricDescriptor) XXX_Size() int {
	return xxx_messageInfo_MetricDescriptor.Size(m)
}
func (m *MetricDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_MetricDescriptor proto.InternalMessageInfo

func (m *MetricDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetricDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MetricDescriptor) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *MetricDescriptor) GetType() MetricDescriptor_Type {
	if m != nil {
		return m.Type
	}
	return MetricDescriptor_UNSPECIFIED
}

func (m *MetricDescriptor) GetLabelKeys() []string {
	if m != nil {
		return m.LabelKeys
	}
	return nil
}

// GaugeInt64TimeSeriesList is a list of timeseries of int64 Gauge.
type GaugeInt64TimeSeriesList struct {
	List                 []*GaugeInt64TimeSeries `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GaugeInt64TimeSeriesList) Reset()         { *m = GaugeInt64TimeSeriesList{} }
func (m *GaugeInt64TimeSeriesList) String() string { return proto.CompactTextString(m) }
func (*GaugeInt64TimeSeriesList) ProtoMessage()    {}
func (*GaugeInt64TimeSeriesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{3}
}

func (m *GaugeInt64TimeSeriesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GaugeInt64TimeSeriesList.Unmarshal(m, b)
}
func (m *GaugeInt64TimeSeriesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GaugeInt64TimeSeriesList.Marshal(b, m, deterministic)
}
func (m *GaugeInt64TimeSeriesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GaugeInt64TimeSeriesList.Merge(m, src)
}
func (m *GaugeInt64TimeSeriesList) XXX_Size() int {
	return xxx_messageInfo_GaugeInt64TimeSeriesList.Size(m)
}
func (m *GaugeInt64TimeSeriesList) XXX_DiscardUnknown() {
	xxx_messageInfo_GaugeInt64TimeSeriesList.DiscardUnknown(m)
}

var xxx_messageInfo_GaugeInt64TimeSeriesList proto.InternalMessageInfo

func (m *GaugeInt64TimeSeriesList) GetList() []*GaugeInt64TimeSeries {
	if m != nil {
		return m.List
	}
	return nil
}

// GaugeDoubleTimeSeriesList is a list of timeseries of double Gauge.
type GaugeDoubleTimeSeriesList struct {
	List                 []*GaugeDoubleTimeSeries `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GaugeDoubleTimeSeriesList) Reset()         { *m = GaugeDoubleTimeSeriesList{} }
func (m *GaugeDoubleTimeSeriesList) String() string { return proto.CompactTextString(m) }
func (*GaugeDoubleTimeSeriesList) ProtoMessage()    {}
func (*GaugeDoubleTimeSeriesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{4}
}

func (m *GaugeDoubleTimeSeriesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GaugeDoubleTimeSeriesList.Unmarshal(m, b)
}
func (m *GaugeDoubleTimeSeriesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GaugeDoubleTimeSeriesList.Marshal(b, m, deterministic)
}
func (m *GaugeDoubleTimeSeriesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GaugeDoubleTimeSeriesList.Merge(m, src)
}
func (m *GaugeDoubleTimeSeriesList) XXX_Size() int {
	return xxx_messageInfo_GaugeDoubleTimeSeriesList.Size(m)
}
func (m *GaugeDoubleTimeSeriesList) XXX_DiscardUnknown() {
	xxx_messageInfo_GaugeDoubleTimeSeriesList.DiscardUnknown(m)
}

var xxx_messageInfo_GaugeDoubleTimeSeriesList proto.InternalMessageInfo

func (m *GaugeDoubleTimeSeriesList) GetList() []*GaugeDoubleTimeSeries {
	if m != nil {
		return m.List
	}
	return nil
}

// CounterInt64TimeSeriesList is a list of timeseries of int64 Counter.
type CounterInt64TimeSeriesList struct {
	List                 []*CounterInt64TimeSeries `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CounterInt64TimeSeriesList) Reset()         { *m = CounterInt64TimeSeriesList{} }
func (m *CounterInt64TimeSeriesList) String() string { return proto.CompactTextString(m) }
func (*CounterInt64TimeSeriesList) ProtoMessage()    {}
func (*CounterInt64TimeSeriesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{5}
}

func (m *CounterInt64TimeSeriesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CounterInt64TimeSeriesList.Unmarshal(m, b)
}
func (m *CounterInt64TimeSeriesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CounterInt64TimeSeriesList.Marshal(b, m, deterministic)
}
func (m *CounterInt64TimeSeriesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CounterInt64TimeSeriesList.Merge(m, src)
}
func (m *CounterInt64TimeSeriesList) XXX_Size() int {
	return xxx_messageInfo_CounterInt64TimeSeriesList.Size(m)
}
func (m *CounterInt64TimeSeriesList) XXX_DiscardUnknown() {
	xxx_messageInfo_CounterInt64TimeSeriesList.DiscardUnknown(m)
}

var xxx_messageInfo_CounterInt64TimeSeriesList proto.InternalMessageInfo

func (m *CounterInt64TimeSeriesList) GetList() []*CounterInt64TimeSeries {
	if m != nil {
		return m.List
	}
	return nil
}

// CounterDoubleTimeSeriesList is a list of timeseries of double Counter.
type CounterDoubleTimeSeriesList struct {
	List                 []*CounterDoubleTimeSeries `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CounterDoubleTimeSeriesList) Reset()         { *m = CounterDoubleTimeSeriesList{} }
func (m *CounterDoubleTimeSeriesList) String() string { return proto.CompactTextString(m) }
func (*CounterDoubleTimeSeriesList) ProtoMessage()    {}
func (*CounterDoubleTimeSeriesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{6}
}

func (m *CounterDoubleTimeSeriesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CounterDoubleTimeSeriesList.Unmarshal(m, b)
}
func (m *CounterDoubleTimeSeriesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CounterDoubleTimeSeriesList.Marshal(b, m, deterministic)
}
func (m *CounterDoubleTimeSeriesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CounterDoubleTimeSeriesList.Merge(m, src)
}
func (m *CounterDoubleTimeSeriesList) XXX_Size() int {
	return xxx_messageInfo_CounterDoubleTimeSeriesList.Size(m)
}
func (m *CounterDoubleTimeSeriesList) XXX_DiscardUnknown() {
	xxx_messageInfo_CounterDoubleTimeSeriesList.DiscardUnknown(m)
}

var xxx_messageInfo_CounterDoubleTimeSeriesList proto.InternalMessageInfo

func (m *CounterDoubleTimeSeriesList) GetList() []*CounterDoubleTimeSeries {
	if m != nil {
		return m.List
	}
	return nil
}

// HistogramTimeSeriesList is a list of timeseries of Histogram.
type HistogramTimeSeriesList struct {
	List                 []*HistogramTimeSeries `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *HistogramTimeSeriesList) Reset()         { *m = HistogramTimeSeriesList{} }
func (m *HistogramTimeSeriesList) String() string { return proto.CompactTextString(m) }
func (*HistogramTimeSeriesList) ProtoMessage()    {}
func (*HistogramTimeSeriesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{7}
}

func (m *HistogramTimeSeriesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistogramTimeSeriesList.Unmarshal(m, b)
}
func (m *HistogramTimeSeriesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistogramTimeSeriesList.Marshal(b, m, deterministic)
}
func (m *HistogramTimeSeriesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistogramTimeSeriesList.Merge(m, src)
}
func (m *HistogramTimeSeriesList) XXX_Size() int {
	return xxx_messageInfo_HistogramTimeSeriesList.Size(m)
}
func (m *HistogramTimeSeriesList) XXX_DiscardUnknown() {
	xxx_messageInfo_HistogramTimeSeriesList.DiscardUnknown(m)
}

var xxx_messageInfo_HistogramTimeSeriesList proto.InternalMessageInfo

func (m *HistogramTimeSeriesList) GetList() []*HistogramTimeSeries {
	if m != nil {
		return m.List
	}
	return nil
}

// SummaryTimeSeriesList is a list of timeseries of Summary.
type SummaryTimeSeriesList struct {
	List                 []*SummaryTimeSeries `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SummaryTimeSeriesList) Reset()         { *m = SummaryTimeSeriesList{} }
func (m *SummaryTimeSeriesList) String() string { return proto.CompactTextString(m) }
func (*SummaryTimeSeriesList) ProtoMessage()    {}
func (*SummaryTimeSeriesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{8}
}

func (m *SummaryTimeSeriesList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SummaryTimeSeriesList.Unmarshal(m, b)
}
func (m *SummaryTimeSeriesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SummaryTimeSeriesList.Marshal(b, m, deterministic)
}
func (m *SummaryTimeSeriesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SummaryTimeSeriesList.Merge(m, src)
}
func (m *SummaryTimeSeriesList) XXX_Size() int {
	return xxx_messageInfo_SummaryTimeSeriesList.Size(m)
}
func (m *SummaryTimeSeriesList) XXX_DiscardUnknown() {
	xxx_messageInfo_SummaryTimeSeriesList.DiscardUnknown(m)
}

var xxx_messageInfo_SummaryTimeSeriesList proto.InternalMessageInfo

func (m *SummaryTimeSeriesList) GetList() []*SummaryTimeSeries {
	if m != nil {
		return m.List
	}
	return nil
}

// GaugeInt64TimeSeries is a list of data points that describes the time-varying values
// of a int64 Gauge metric.
type GaugeInt64TimeSeries struct {
	// The set of label values that uniquely identify this timeseries. Applies to
	// all points. The order of label values must match that of label keys in the
	// metric descriptor.
	LabelValues []*LabelValue `protobuf:"bytes,1,rep,name=label_values,json=labelValues,proto3" json:"label_values,omitempty"`
	// The data points of this timeseries.
	Points               []*GaugeInt64Value `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GaugeInt64TimeSeries) Reset()         { *m = GaugeInt64TimeSeries{} }
func (m *GaugeInt64TimeSeries) String() string { return proto.CompactTextString(m) }
func (*GaugeInt64TimeSeries) ProtoMessage()    {}
func (*GaugeInt64TimeSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{9}
}

func (m *GaugeInt64TimeSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GaugeInt64TimeSeries.Unmarshal(m, b)
}
func (m *GaugeInt64TimeSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GaugeInt64TimeSeries.Marshal(b, m, deterministic)
}
func (m *GaugeInt64TimeSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GaugeInt64TimeSeries.Merge(m, src)
}
func (m *GaugeInt64TimeSeries) XXX_Size() int {
	return xxx_messageInfo_GaugeInt64TimeSeries.Size(m)
}
func (m *GaugeInt64TimeSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_GaugeInt64TimeSeries.DiscardUnknown(m)
}

var xxx_messageInfo_GaugeInt64TimeSeries proto.InternalMessageInfo

func (m *GaugeInt64TimeSeries) GetLabelValues() []*LabelValue {
	if m != nil {
		return m.LabelValues
	}
	return nil
}

func (m *GaugeInt64TimeSeries) GetPoints() []*GaugeInt64Value {
	if m != nil {
		return m.Points
	}
	return nil
}

// GaugeDoubleTimeSeries is a list of data points that describes the time-varying values
// of a double Gauge metric.
type GaugeDoubleTimeSeries struct {
	// The set of label values that uniquely identify this timeseries. Applies to
	// all points. The order of label values must match that of label keys in the
	// metric descriptor.
	LabelValues []*LabelValue `protobuf:"bytes,1,rep,name=label_values,json=labelValues,proto3" json:"label_values,omitempty"`
	// The data points of this timeseries.
	Points               []*GaugeDoubleValue `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GaugeDoubleTimeSeries) Reset()         { *m = GaugeDoubleTimeSeries{} }
func (m *GaugeDoubleTimeSeries) String() string { return proto.CompactTextString(m) }
func (*GaugeDoubleTimeSeries) ProtoMessage()    {}
func (*GaugeDoubleTimeSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{10}
}

func (m *GaugeDoubleTimeSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GaugeDoubleTimeSeries.Unmarshal(m, b)
}
func (m *GaugeDoubleTimeSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GaugeDoubleTimeSeries.Marshal(b, m, deterministic)
}
func (m *GaugeDoubleTimeSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GaugeDoubleTimeSeries.Merge(m, src)
}
func (m *GaugeDoubleTimeSeries) XXX_Size() int {
	return xxx_messageInfo_GaugeDoubleTimeSeries.Size(m)
}
func (m *GaugeDoubleTimeSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_GaugeDoubleTimeSeries.DiscardUnknown(m)
}

var xxx_messageInfo_GaugeDoubleTimeSeries proto.InternalMessageInfo

func (m *GaugeDoubleTimeSeries) GetLabelValues() []*LabelValue {
	if m != nil {
		return m.LabelValues
	}
	return nil
}

func (m *GaugeDoubleTimeSeries) GetPoints() []*GaugeDoubleValue {
	if m != nil {
		return m.Points
	}
	return nil
}

// CounterInt64TimeSeries is a list of data points that describes the time-varying values
// of a int64 Counter metric.
type CounterInt64TimeSeries struct {
	// The set of label values that uniquely identify this timeseries. Applies to
	// all points. The order of label values must match that of label keys in the
	// metric descriptor.
	LabelValues []*LabelValue `protobuf:"bytes,1,rep,name=label_values,json=labelValues,proto3" json:"label_values,omitempty"`
	// The data points of this timeseries.
	Points               []*CounterInt64Value `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CounterInt64TimeSeries) Reset()         { *m = CounterInt64TimeSeries{} }
func (m *CounterInt64TimeSeries) String() string { return proto.CompactTextString(m) }
func (*CounterInt64TimeSeries) ProtoMessage()    {}
func (*CounterInt64TimeSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{11}
}

func (m *CounterInt64TimeSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CounterInt64TimeSeries.Unmarshal(m, b)
}
func (m *CounterInt64TimeSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CounterInt64TimeSeries.Marshal(b, m, deterministic)
}
func (m *CounterInt64TimeSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CounterInt64TimeSeries.Merge(m, src)
}
func (m *CounterInt64TimeSeries) XXX_Size() int {
	return xxx_messageInfo_CounterInt64TimeSeries.Size(m)
}
func (m *CounterInt64TimeSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_CounterInt64TimeSeries.DiscardUnknown(m)
}

var xxx_messageInfo_CounterInt64TimeSeries proto.InternalMessageInfo

func (m *CounterInt64TimeSeries) GetLabelValues() []*LabelValue {
	if m != nil {
		return m.LabelValues
	}
	return nil
}

func (m *CounterInt64TimeSeries) GetPoints() []*CounterInt64Value {
	if m != nil {
		return m.Points
	}
	return nil
}

// CounterDoubleTimeSeries is a list of data points that describes the time-varying values
// of a double Counter metric.
type CounterDoubleTimeSeries struct {
	// The set of label values that uniquely identify this timeseries. Applies to
	// all points. The order of label values must match that of label keys in the
	// metric descriptor.
	LabelValues []*LabelValue `protobuf:"bytes,1,rep,name=label_values,json=labelValues,proto3" json:"label_values,omitempty"`
	// The data points of this timeseries.
	Points               []*CounterDoubleValue `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CounterDoubleTimeSeries) Reset()         { *m = CounterDoubleTimeSeries{} }
func (m *CounterDoubleTimeSeries) String() string { return proto.CompactTextString(m) }
func (*CounterDoubleTimeSeries) ProtoMessage()    {}
func (*CounterDoubleTimeSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{12}
}

func (m *CounterDoubleTimeSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CounterDoubleTimeSeries.Unmarshal(m, b)
}
func (m *CounterDoubleTimeSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CounterDoubleTimeSeries.Marshal(b, m, deterministic)
}
func (m *CounterDoubleTimeSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CounterDoubleTimeSeries.Merge(m, src)
}
func (m *CounterDoubleTimeSeries) XXX_Size() int {
	return xxx_messageInfo_CounterDoubleTimeSeries.Size(m)
}
func (m *CounterDoubleTimeSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_CounterDoubleTimeSeries.DiscardUnknown(m)
}

var xxx_messageInfo_CounterDoubleTimeSeries proto.InternalMessageInfo

func (m *CounterDoubleTimeSeries) GetLabelValues() []*LabelValue {
	if m != nil {
		return m.LabelValues
	}
	return nil
}

func (m *CounterDoubleTimeSeries) GetPoints() []*CounterDoubleValue {
	if m != nil {
		return m.Points
	}
	return nil
}

// HistogramTimeSeries is a list of data points that describes the time-varying values
// of a Histogram.
type HistogramTimeSeries struct {
	// The set of label values that uniquely identify this timeseries. Applies to
	// all points. The order of label values must match that of label keys in the
	// metric descriptor.
	LabelValues []*LabelValue `protobuf:"bytes,1,rep,name=label_values,json=labelValues,proto3" json:"label_values,omitempty"`
	// A histogram may optionally contain the distribution of the values in the population.
	// If that is the case then "bucket_options" field below and "buckets" field in
	// HistogramValue both must be defined. Otherwise both fields must be omitted in
	// which case the distribution of values in the histogram is unknown and only the
	// total count and sum are known.
	// bucket_options apply to all points in this HistogramTimeSeries. To define
	// different bucket_options to different points create separate instances of
	// HistogramTimeSeries each with its own bucket_options.
	//
	// Types that are valid to be assigned to BucketOptions:
	//	*HistogramTimeSeries_ExplicitBounds_
	BucketOptions isHistogramTimeSeries_BucketOptions `protobuf_oneof:"bucket_options"`
	// The data points of this timeseries.
	Points               []*HistogramValue `protobuf:"bytes,3,rep,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HistogramTimeSeries) Reset()         { *m = HistogramTimeSeries{} }
func (m *HistogramTimeSeries) String() string { return proto.CompactTextString(m) }
func (*HistogramTimeSeries) ProtoMessage()    {}
func (*HistogramTimeSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{13}
}

func (m *HistogramTimeSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistogramTimeSeries.Unmarshal(m, b)
}
func (m *HistogramTimeSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistogramTimeSeries.Marshal(b, m, deterministic)
}
func (m *HistogramTimeSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistogramTimeSeries.Merge(m, src)
}
func (m *HistogramTimeSeries) XXX_Size() int {
	return xxx_messageInfo_HistogramTimeSeries.Size(m)
}
func (m *HistogramTimeSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_HistogramTimeSeries.DiscardUnknown(m)
}

var xxx_messageInfo_HistogramTimeSeries proto.InternalMessageInfo

func (m *HistogramTimeSeries) GetLabelValues() []*LabelValue {
	if m != nil {
		return m.LabelValues
	}
	return nil
}

type isHistogramTimeSeries_BucketOptions interface {
	isHistogramTimeSeries_BucketOptions()
}

type HistogramTimeSeries_ExplicitBounds_ struct {
	ExplicitBounds *HistogramTimeSeries_ExplicitBounds `protobuf:"bytes,2,opt,name=explicit_bounds,json=explicitBounds,proto3,oneof"`
}

func (*HistogramTimeSeries_ExplicitBounds_) isHistogramTimeSeries_BucketOptions() {}

func (m *HistogramTimeSeries) GetBucketOptions() isHistogramTimeSeries_BucketOptions {
	if m != nil {
		return m.BucketOptions
	}
	return nil
}

func (m *HistogramTimeSeries) GetExplicitBounds() *HistogramTimeSeries_ExplicitBounds {
	if x, ok := m.GetBucketOptions().(*HistogramTimeSeries_ExplicitBounds_); ok {
		return x.ExplicitBounds
	}
	return nil
}

func (m *HistogramTimeSeries) GetPoints() []*HistogramValue {
	if m != nil {
		return m.Points
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HistogramTimeSeries) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HistogramTimeSeries_ExplicitBounds_)(nil),
	}
}

// ExplicitBounds specifies buckets with explicitly defined bounds for values.
type HistogramTimeSeries_ExplicitBounds struct {
	// The bucket boundaries are described by "bounds" field.
	//
	// This defines size(bounds) + 1 (= N) buckets. The boundaries for bucket
	// at index i are:
	//
	// [0, bounds[i]) for i == 0
	// [bounds[i-1], bounds[i]) for 0 < i < N-1
	// [bounds[i], +infinity) for i == N-1
	// The values in bounds array must be strictly increasing and > 0.
	//
	// Note: only [a, b) intervals are currently supported for each bucket. If we decides
	// to also support (a, b] intervals we should add support for these by defining a boolean
	// value which decides what type of intervals to use.
	Bounds               []float64 `protobuf:"fixed64,1,rep,packed,name=bounds,proto3" json:"bounds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *HistogramTimeSeries_ExplicitBounds) Reset()         { *m = HistogramTimeSeries_ExplicitBounds{} }
func (m *HistogramTimeSeries_ExplicitBounds) String() string { return proto.CompactTextString(m) }
func (*HistogramTimeSeries_ExplicitBounds) ProtoMessage()    {}
func (*HistogramTimeSeries_ExplicitBounds) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{13, 0}
}

func (m *HistogramTimeSeries_ExplicitBounds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistogramTimeSeries_ExplicitBounds.Unmarshal(m, b)
}
func (m *HistogramTimeSeries_ExplicitBounds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistogramTimeSeries_ExplicitBounds.Marshal(b, m, deterministic)
}
func (m *HistogramTimeSeries_ExplicitBounds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistogramTimeSeries_ExplicitBounds.Merge(m, src)
}
func (m *HistogramTimeSeries_ExplicitBounds) XXX_Size() int {
	return xxx_messageInfo_HistogramTimeSeries_ExplicitBounds.Size(m)
}
func (m *HistogramTimeSeries_ExplicitBounds) XXX_DiscardUnknown() {
	xxx_messageInfo_HistogramTimeSeries_ExplicitBounds.DiscardUnknown(m)
}

var xxx_messageInfo_HistogramTimeSeries_ExplicitBounds proto.InternalMessageInfo

func (m *HistogramTimeSeries_ExplicitBounds) GetBounds() []float64 {
	if m != nil {
		return m.Bounds
	}
	return nil
}

// SummaryTimeSeries is a list of data points that describes the time-varying values
// of a Summary metric.
type SummaryTimeSeries struct {
	// The set of label values that uniquely identify this timeseries. Applies to
	// all points. The order of label values must match that of label keys in the
	// metric descriptor.
	LabelValues []*LabelValue `protobuf:"bytes,1,rep,name=label_values,json=labelValues,proto3" json:"label_values,omitempty"`
	// The data points of this timeseries.
	Points               []*SummaryValue `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SummaryTimeSeries) Reset()         { *m = SummaryTimeSeries{} }
func (m *SummaryTimeSeries) String() string { return proto.CompactTextString(m) }
func (*SummaryTimeSeries) ProtoMessage()    {}
func (*SummaryTimeSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{14}
}

func (m *SummaryTimeSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SummaryTimeSeries.Unmarshal(m, b)
}
func (m *SummaryTimeSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SummaryTimeSeries.Marshal(b, m, deterministic)
}
func (m *SummaryTimeSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SummaryTimeSeries.Merge(m, src)
}
func (m *SummaryTimeSeries) XXX_Size() int {
	return xxx_messageInfo_SummaryTimeSeries.Size(m)
}
func (m *SummaryTimeSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_SummaryTimeSeries.DiscardUnknown(m)
}

var xxx_messageInfo_SummaryTimeSeries proto.InternalMessageInfo

func (m *SummaryTimeSeries) GetLabelValues() []*LabelValue {
	if m != nil {
		return m.LabelValues
	}
	return nil
}

func (m *SummaryTimeSeries) GetPoints() []*SummaryValue {
	if m != nil {
		return m.Points
	}
	return nil
}

// LabelValue is a value of a label.
type LabelValue struct {
	// The value for the label.
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// If true the value field is ignored and considered not set.
	// This is used to differentiate a missing label from an empty string.
	ValueUnspecified     bool     `protobuf:"varint,2,opt,name=value_unspecified,json=valueUnspecified,proto3" json:"value_unspecified,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabelValue) Reset()         { *m = LabelValue{} }
func (m *LabelValue) String() string { return proto.CompactTextString(m) }
func (*LabelValue) ProtoMessage()    {}
func (*LabelValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{15}
}

func (m *LabelValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelValue.Unmarshal(m, b)
}
func (m *LabelValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelValue.Marshal(b, m, deterministic)
}
func (m *LabelValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelValue.Merge(m, src)
}
func (m *LabelValue) XXX_Size() int {
	return xxx_messageInfo_LabelValue.Size(m)
}
func (m *LabelValue) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelValue.DiscardUnknown(m)
}

var xxx_messageInfo_LabelValue proto.InternalMessageInfo

func (m *LabelValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *LabelValue) GetValueUnspecified() bool {
	if m != nil {
		return m.ValueUnspecified
	}
	return false
}

// GaugeInt64Value is a timestamped measurement of int64 Gauge.
type GaugeInt64Value struct {
	// timestamp_unixnano is the moment when this point was recorded.
	// Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
	TimestampUnixnano int64 `protobuf:"varint,1,opt,name=timestamp_unixnano,json=timestampUnixnano,proto3" json:"timestamp_unixnano,omitempty"`
	// value of Gauge.
	Value                int64    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GaugeInt64Value) Reset()         { *m = GaugeInt64Value{} }
func (m *GaugeInt64Value) String() string { return proto.CompactTextString(m) }
func (*GaugeInt64Value) ProtoMessage()    {}
func (*GaugeInt64Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{16}
}

func (m *GaugeInt64Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GaugeInt64Value.Unmarshal(m, b)
}
func (m *GaugeInt64Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GaugeInt64Value.Marshal(b, m, deterministic)
}
func (m *GaugeInt64Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GaugeInt64Value.Merge(m, src)
}
func (m *GaugeInt64Value) XXX_Size() int {
	return xxx_messageInfo_GaugeInt64Value.Size(m)
}
func (m *GaugeInt64Value) XXX_DiscardUnknown() {
	xxx_messageInfo_GaugeInt64Value.DiscardUnknown(m)
}

var xxx_messageInfo_GaugeInt64Value proto.InternalMessageInfo

func (m *GaugeInt64Value) GetTimestampUnixnano() int64 {
	if m != nil {
		return m.TimestampUnixnano
	}
	return 0
}

func (m *GaugeInt64Value) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// GaugeDoubleValue is a timestamped measurement of double Gauge.
type GaugeDoubleValue struct {
	// timestamp_unixnano is the moment when this point was recorded.
	// Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
	TimestampUnixnano int64 `protobuf:"varint,1,opt,name=timestamp_unixnano,json=timestampUnixnano,proto3" json:"timestamp_unixnano,omitempty"`
	// value of Gauge.
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GaugeDoubleValue) Reset()         { *m = GaugeDoubleValue{} }
func (m *GaugeDoubleValue) String() string { return proto.CompactTextString(m) }
func (*GaugeDoubleValue) ProtoMessage()    {}
func (*GaugeDoubleValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{17}
}

func (m *GaugeDoubleValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GaugeDoubleValue.Unmarshal(m, b)
}
func (m *GaugeDoubleValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GaugeDoubleValue.Marshal(b, m, deterministic)
}
func (m *GaugeDoubleValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GaugeDoubleValue.Merge(m, src)
}
func (m *GaugeDoubleValue) XXX_Size() int {
	return xxx_messageInfo_GaugeDoubleValue.Size(m)
}
func (m *GaugeDoubleValue) XXX_DiscardUnknown() {
	xxx_messageInfo_GaugeDoubleValue.DiscardUnknown(m)
}

var xxx_messageInfo_GaugeDoubleValue proto.InternalMessageInfo

func (m *GaugeDoubleValue) GetTimestampUnixnano() int64 {
	if m != nil {
		return m.TimestampUnixnano
	}
	return 0
}

func (m *GaugeDoubleValue) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// CounterInt64Value is a timestamped measurement of int64 counter or cumulative value.
type CounterInt64Value struct {
	// start_time_unixnano is the time when the cumulative value was reset to zero.
	// The cumulative value is over the time interval [start_time_unixnano, timestamp_unixnano].
	// Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
	// Value of 0 indicates that timestamp is unspecified. In that case the timestamp
	// may be decided by the backend.
	StartTimeUnixnano int64 `protobuf:"varint,1,opt,name=start_time_unixnano,json=startTimeUnixnano,proto3" json:"start_time_unixnano,omitempty"`
	// timestamp_unixnano is the moment when this point was recorded.
	// Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
	TimestampUnixnano int64 `protobuf:"varint,2,opt,name=timestamp_unixnano,json=timestampUnixnano,proto3" json:"timestamp_unixnano,omitempty"`
	// value of Counter.
	Value                int64    `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CounterInt64Value) Reset()         { *m = CounterInt64Value{} }
func (m *CounterInt64Value) String() string { return proto.CompactTextString(m) }
func (*CounterInt64Value) ProtoMessage()    {}
func (*CounterInt64Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{18}
}

func (m *CounterInt64Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CounterInt64Value.Unmarshal(m, b)
}
func (m *CounterInt64Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CounterInt64Value.Marshal(b, m, deterministic)
}
func (m *CounterInt64Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CounterInt64Value.Merge(m, src)
}
func (m *CounterInt64Value) XXX_Size() int {
	return xxx_messageInfo_CounterInt64Value.Size(m)
}
func (m *CounterInt64Value) XXX_DiscardUnknown() {
	xxx_messageInfo_CounterInt64Value.DiscardUnknown(m)
}

var xxx_messageInfo_CounterInt64Value proto.InternalMessageInfo

func (m *CounterInt64Value) GetStartTimeUnixnano() int64 {
	if m != nil {
		return m.StartTimeUnixnano
	}
	return 0
}

func (m *CounterInt64Value) GetTimestampUnixnano() int64 {
	if m != nil {
		return m.TimestampUnixnano
	}
	return 0
}

func (m *CounterInt64Value) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// CounterDoubleValue is a timestamped measurement of double counter or cumulative value.
type CounterDoubleValue struct {
	// start_time_unixnano is the time when the cumulative value was reset to zero.
	// The cumulative value is over the time interval [start_time_unixnano, timestamp_unixnano].
	// Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
	// Value of 0 indicates that timestamp is unspecified. In that case the timestamp
	// may be decided by the backend.
	StartTimeUnixnano int64 `protobuf:"varint,1,opt,name=start_time_unixnano,json=startTimeUnixnano,proto3" json:"start_time_unixnano,omitempty"`
	// timestamp_unixnano is the moment when this point was recorded.
	// Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
	TimestampUnixnano int64 `protobuf:"varint,2,opt,name=timestamp_unixnano,json=timestampUnixnano,proto3" json:"timestamp_unixnano,omitempty"`
	// value of Counter.
	Value                float64  `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CounterDoubleValue) Reset()         { *m = CounterDoubleValue{} }
func (m *CounterDoubleValue) String() string { return proto.CompactTextString(m) }
func (*CounterDoubleValue) ProtoMessage()    {}
func (*CounterDoubleValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{19}
}

func (m *CounterDoubleValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CounterDoubleValue.Unmarshal(m, b)
}
func (m *CounterDoubleValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CounterDoubleValue.Marshal(b, m, deterministic)
}
func (m *CounterDoubleValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CounterDoubleValue.Merge(m, src)
}
func (m *CounterDoubleValue) XXX_Size() int {
	return xxx_messageInfo_CounterDoubleValue.Size(m)
}
func (m *CounterDoubleValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CounterDoubleValue.DiscardUnknown(m)
}

var xxx_messageInfo_CounterDoubleValue proto.InternalMessageInfo

func (m *CounterDoubleValue) GetStartTimeUnixnano() int64 {
	if m != nil {
		return m.StartTimeUnixnano
	}
	return 0
}

func (m *CounterDoubleValue) GetTimestampUnixnano() int64 {
	if m != nil {
		return m.TimestampUnixnano
	}
	return 0
}

func (m *CounterDoubleValue) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Histogram contains summary statistics for a population of values. It may
// optionally contain the distribution of those values across a set of buckets.
type HistogramValue struct {
	// start_time_unixnano is the time when the cumulative value was reset to zero.
	// The cumulative value is over the time interval [start_time_unixnano, timestamp_unixnano].
	// Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
	// Value of 0 indicates that timestamp is unspecified. In that case the timestamp
	// may be decided by the backend.
	// Note: this field is always unspecified if MetricDescriptor.type==GAUGE_HISTOGRAM.
	StartTimeUnixnano int64 `protobuf:"varint,1,opt,name=start_time_unixnano,json=startTimeUnixnano,proto3" json:"start_time_unixnano,omitempty"`
	// timestamp_unixnano is the moment when this point was recorded.
	// Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
	TimestampUnixnano int64 `protobuf:"varint,2,opt,name=timestamp_unixnano,json=timestampUnixnano,proto3" json:"timestamp_unixnano,omitempty"`
	// count is the number of values in the population. Must be non-negative. This value
	// must be equal to the sum of the "count" fields in buckets if a histogram is
	// provided.
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	// sum of the values in the population. If count is zero then this field
	// must be zero. This value must be equal to the sum of the "sum" fields in buckets if
	// a histogram is provided.
	Sum float64 `protobuf:"fixed64,4,opt,name=sum,proto3" json:"sum,omitempty"`
	// buckets is an optional field contains the values of histogram for each bucket.
	//
	// The sum of the values in the buckets "count" field must equal the value in the
	// count field of HistogramValue.
	//
	// The number of elements in buckets array must be by one greater than the
	// number of elements in bucket_bounds array.
	//
	// Note: if HistogramTimeSeries.bucket_options defines bucket bounds then this field
	// must also be present and number of elements in this field must be equal to the
	// number of buckets defined by bucket_options.
	Buckets              []*HistogramValue_Bucket `protobuf:"bytes,5,rep,name=buckets,proto3" json:"buckets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *HistogramValue) Reset()         { *m = HistogramValue{} }
func (m *HistogramValue) String() string { return proto.CompactTextString(m) }
func (*HistogramValue) ProtoMessage()    {}
func (*HistogramValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{20}
}

func (m *HistogramValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistogramValue.Unmarshal(m, b)
}
func (m *HistogramValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistogramValue.Marshal(b, m, deterministic)
}
func (m *HistogramValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistogramValue.Merge(m, src)
}
func (m *HistogramValue) XXX_Size() int {
	return xxx_messageInfo_HistogramValue.Size(m)
}
func (m *HistogramValue) XXX_DiscardUnknown() {
	xxx_messageInfo_HistogramValue.DiscardUnknown(m)
}

var xxx_messageInfo_HistogramValue proto.InternalMessageInfo

func (m *HistogramValue) GetStartTimeUnixnano() int64 {
	if m != nil {
		return m.StartTimeUnixnano
	}
	return 0
}

func (m *HistogramValue) GetTimestampUnixnano() int64 {
	if m != nil {
		return m.TimestampUnixnano
	}
	return 0
}

func (m *HistogramValue) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *HistogramValue) GetSum() float64 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *HistogramValue) GetBuckets() []*HistogramValue_Bucket {
	if m != nil {
		return m.Buckets
	}
	return nil
}

// Bucket contains values for a bucket.
type HistogramValue_Bucket struct {
	// The number of values in each bucket of the histogram, as described by
	// bucket_options.
	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// exemplar is an optional representative value of the bucket.
	Exemplar             *HistogramValue_Bucket_Exemplar `protobuf:"bytes,2,opt,name=exemplar,proto3" json:"exemplar,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *HistogramValue_Bucket) Reset()         { *m = HistogramValue_Bucket{} }
func (m *HistogramValue_Bucket) String() string { return proto.CompactTextString(m) }
func (*HistogramValue_Bucket) ProtoMessage()    {}
func (*HistogramValue_Bucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{20, 0}
}

func (m *HistogramValue_Bucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistogramValue_Bucket.Unmarshal(m, b)
}
func (m *HistogramValue_Bucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistogramValue_Bucket.Marshal(b, m, deterministic)
}
func (m *HistogramValue_Bucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistogramValue_Bucket.Merge(m, src)
}
func (m *HistogramValue_Bucket) XXX_Size() int {
	return xxx_messageInfo_HistogramValue_Bucket.Size(m)
}
func (m *HistogramValue_Bucket) XXX_DiscardUnknown() {
	xxx_messageInfo_HistogramValue_Bucket.DiscardUnknown(m)
}

var xxx_messageInfo_HistogramValue_Bucket proto.InternalMessageInfo

func (m *HistogramValue_Bucket) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *HistogramValue_Bucket) GetExemplar() *HistogramValue_Bucket_Exemplar {
	if m != nil {
		return m.Exemplar
	}
	return nil
}

// Exemplars are example points that may be used to annotate aggregated
// Histogram values. They are metadata that gives information about a
// particular value added to a Histogram bucket.
type HistogramValue_Bucket_Exemplar struct {
	// Value of the exemplar point. It determines which bucket the exemplar belongs to.
	// If bucket_options define bounds for this bucket then this value must be within
	// the defined bounds.
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	// The observation (sampling) time of the above value.
	TimestampUnixnano int64 `protobuf:"varint,3,opt,name=timestamp_unixnano,json=timestampUnixnano,proto3" json:"timestamp_unixnano,omitempty"`
	// exemplar_attachments are contextual information about the example value.
	// Keys in this list must be unique.
	Attachments          []*StringKeyValuePair `protobuf:"bytes,5,rep,name=attachments,proto3" json:"attachments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HistogramValue_Bucket_Exemplar) Reset()         { *m = HistogramValue_Bucket_Exemplar{} }
func (m *HistogramValue_Bucket_Exemplar) String() string { return proto.CompactTextString(m) }
func (*HistogramValue_Bucket_Exemplar) ProtoMessage()    {}
func (*HistogramValue_Bucket_Exemplar) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{20, 0, 0}
}

func (m *HistogramValue_Bucket_Exemplar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistogramValue_Bucket_Exemplar.Unmarshal(m, b)
}
func (m *HistogramValue_Bucket_Exemplar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistogramValue_Bucket_Exemplar.Marshal(b, m, deterministic)
}
func (m *HistogramValue_Bucket_Exemplar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistogramValue_Bucket_Exemplar.Merge(m, src)
}
func (m *HistogramValue_Bucket_Exemplar) XXX_Size() int {
	return xxx_messageInfo_HistogramValue_Bucket_Exemplar.Size(m)
}
func (m *HistogramValue_Bucket_Exemplar) XXX_DiscardUnknown() {
	xxx_messageInfo_HistogramValue_Bucket_Exemplar.DiscardUnknown(m)
}

var xxx_messageInfo_HistogramValue_Bucket_Exemplar proto.InternalMessageInfo

func (m *HistogramValue_Bucket_Exemplar) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *HistogramValue_Bucket_Exemplar) GetTimestampUnixnano() int64 {
	if m != nil {
		return m.TimestampUnixnano
	}
	return 0
}

func (m *HistogramValue_Bucket_Exemplar) GetAttachments() []*StringKeyValuePair {
	if m != nil {
		return m.Attachments
	}
	return nil
}

// StringKeyValuePair is a pair of key/value strings.
type StringKeyValuePair struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringKeyValuePair) Reset()         { *m = StringKeyValuePair{} }
func (m *StringKeyValuePair) String() string { return proto.CompactTextString(m) }
func (*StringKeyValuePair) ProtoMessage()    {}
func (*StringKeyValuePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{21}
}

func (m *StringKeyValuePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringKeyValuePair.Unmarshal(m, b)
}
func (m *StringKeyValuePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringKeyValuePair.Marshal(b, m, deterministic)
}
func (m *StringKeyValuePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringKeyValuePair.Merge(m, src)
}
func (m *StringKeyValuePair) XXX_Size() int {
	return xxx_messageInfo_StringKeyValuePair.Size(m)
}
func (m *StringKeyValuePair) XXX_DiscardUnknown() {
	xxx_messageInfo_StringKeyValuePair.DiscardUnknown(m)
}

var xxx_messageInfo_StringKeyValuePair proto.InternalMessageInfo

func (m *StringKeyValuePair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StringKeyValuePair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// The start_timestamp only applies to the count and sum in the SummaryValue.
type SummaryValue struct {
	// start_time_unixnano is the time when the cumulative value was reset to zero.
	// The cumulative value is over the time interval [start_time_unixnano, timestamp_unixnano].
	// Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
	// Value of 0 indicates that timestamp is unspecified. In that case the timestamp
	// may be decided by the backend.
	StartTimeUnixnano int64 `protobuf:"varint,1,opt,name=start_time_unixnano,json=startTimeUnixnano,proto3" json:"start_time_unixnano,omitempty"`
	// timestamp_unixnano is the moment when this point was recorded.
	// Value is UNIX Epoch time in nanoseconds since 00:00:00 UTC on 1 January 1970.
	TimestampUnixnano int64 `protobuf:"varint,2,opt,name=timestamp_unixnano,json=timestampUnixnano,proto3" json:"timestamp_unixnano,omitempty"`
	// The total number of recorded values since start_time. Optional since
	// some systems don't expose this.
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	// The total sum of recorded values since start_time. Optional since some
	// systems don't expose this. If count is zero then this field must be zero.
	Sum float64 `protobuf:"fixed64,4,opt,name=sum,proto3" json:"sum,omitempty"`
	// count_and_sum_unspecified must be set to true if count and sum values are unknown or
	// unspecified.
	CountAndSumUnspecified bool `protobuf:"varint,5,opt,name=count_and_sum_unspecified,json=countAndSumUnspecified,proto3" json:"count_and_sum_unspecified,omitempty"`
	// A list of values at different percentiles of the distribution calculated
	// from the current snapshot. The percentiles must be strictly increasing.
	PercentileValues     []*SummaryValue_ValueAtPercentile `protobuf:"bytes,6,rep,name=percentile_values,json=percentileValues,proto3" json:"percentile_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *SummaryValue) Reset()         { *m = SummaryValue{} }
func (m *SummaryValue) String() string { return proto.CompactTextString(m) }
func (*SummaryValue) ProtoMessage()    {}
func (*SummaryValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{22}
}

func (m *SummaryValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SummaryValue.Unmarshal(m, b)
}
func (m *SummaryValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SummaryValue.Marshal(b, m, deterministic)
}
func (m *SummaryValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SummaryValue.Merge(m, src)
}
func (m *SummaryValue) XXX_Size() int {
	return xxx_messageInfo_SummaryValue.Size(m)
}
func (m *SummaryValue) XXX_DiscardUnknown() {
	xxx_messageInfo_SummaryValue.DiscardUnknown(m)
}

var xxx_messageInfo_SummaryValue proto.InternalMessageInfo

func (m *SummaryValue) GetStartTimeUnixnano() int64 {
	if m != nil {
		return m.StartTimeUnixnano
	}
	return 0
}

func (m *SummaryValue) GetTimestampUnixnano() int64 {
	if m != nil {
		return m.TimestampUnixnano
	}
	return 0
}

func (m *SummaryValue) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SummaryValue) GetSum() float64 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *SummaryValue) GetCountAndSumUnspecified() bool {
	if m != nil {
		return m.CountAndSumUnspecified
	}
	return false
}

func (m *SummaryValue) GetPercentileValues() []*SummaryValue_ValueAtPercentile {
	if m != nil {
		return m.PercentileValues
	}
	return nil
}

// Represents the value at a given percentile of a distribution.
type SummaryValue_ValueAtPercentile struct {
	// The percentile of a distribution. Must be in the interval
	// (0.0, 100.0].
	Percentile float64 `protobuf:"fixed64,1,opt,name=percentile,proto3" json:"percentile,omitempty"`
	// The value at the given percentile of a distribution.
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SummaryValue_ValueAtPercentile) Reset()         { *m = SummaryValue_ValueAtPercentile{} }
func (m *SummaryValue_ValueAtPercentile) String() string { return proto.CompactTextString(m) }
func (*SummaryValue_ValueAtPercentile) ProtoMessage()    {}
func (*SummaryValue_ValueAtPercentile) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a96a8671bd66caf, []int{22, 0}
}

func (m *SummaryValue_ValueAtPercentile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SummaryValue_ValueAtPercentile.Unmarshal(m, b)
}
func (m *SummaryValue_ValueAtPercentile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SummaryValue_ValueAtPercentile.Marshal(b, m, deterministic)
}
func (m *SummaryValue_ValueAtPercentile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SummaryValue_ValueAtPercentile.Merge(m, src)
}
func (m *SummaryValue_ValueAtPercentile) XXX_Size() int {
	return xxx_messageInfo_SummaryValue_ValueAtPercentile.Size(m)
}
func (m *SummaryValue_ValueAtPercentile) XXX_DiscardUnknown() {
	xxx_messageInfo_SummaryValue_ValueAtPercentile.DiscardUnknown(m)
}

var xxx_messageInfo_SummaryValue_ValueAtPercentile proto.InternalMessageInfo

func (m *SummaryValue_ValueAtPercentile) GetPercentile() float64 {
	if m != nil {
		return m.Percentile
	}
	return 0
}

func (m *SummaryValue_ValueAtPercentile) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterEnum("otlp.MetricDescriptor_Type", MetricDescriptor_Type_name, MetricDescriptor_Type_value)
	proto.RegisterType((*ResourceMetrics)(nil), "otlp.ResourceMetrics")
	proto.RegisterType((*Metric)(nil), "otlp.Metric")
	proto.RegisterType((*MetricDescriptor)(nil), "otlp.MetricDescriptor")
	proto.RegisterType((*GaugeInt64TimeSeriesList)(nil), "otlp.GaugeInt64TimeSeriesList")
	proto.RegisterType((*GaugeDoubleTimeSeriesList)(nil), "otlp.GaugeDoubleTimeSeriesList")
	proto.RegisterType((*CounterInt64TimeSeriesList)(nil), "otlp.CounterInt64TimeSeriesList")
	proto.RegisterType((*CounterDoubleTimeSeriesList)(nil), "otlp.CounterDoubleTimeSeriesList")
	proto.RegisterType((*HistogramTimeSeriesList)(nil), "otlp.HistogramTimeSeriesList")
	proto.RegisterType((*SummaryTimeSeriesList)(nil), "otlp.SummaryTimeSeriesList")
	proto.RegisterType((*GaugeInt64TimeSeries)(nil), "otlp.GaugeInt64TimeSeries")
	proto.RegisterType((*GaugeDoubleTimeSeries)(nil), "otlp.GaugeDoubleTimeSeries")
	proto.RegisterType((*CounterInt64TimeSeries)(nil), "otlp.CounterInt64TimeSeries")
	proto.RegisterType((*CounterDoubleTimeSeries)(nil), "otlp.CounterDoubleTimeSeries")
	proto.RegisterType((*HistogramTimeSeries)(nil), "otlp.HistogramTimeSeries")
	proto.RegisterType((*HistogramTimeSeries_ExplicitBounds)(nil), "otlp.HistogramTimeSeries.ExplicitBounds")
	proto.RegisterType((*SummaryTimeSeries)(nil), "otlp.SummaryTimeSeries")
	proto.RegisterType((*LabelValue)(nil), "otlp.LabelValue")
	proto.RegisterType((*GaugeInt64Value)(nil), "otlp.GaugeInt64Value")
	proto.RegisterType((*GaugeDoubleValue)(nil), "otlp.GaugeDoubleValue")
	proto.RegisterType((*CounterInt64Value)(nil), "otlp.CounterInt64Value")
	proto.RegisterType((*CounterDoubleValue)(nil), "otlp.CounterDoubleValue")
	proto.RegisterType((*HistogramValue)(nil), "otlp.HistogramValue")
	proto.RegisterType((*HistogramValue_Bucket)(nil), "otlp.HistogramValue.Bucket")
	proto.RegisterType((*HistogramValue_Bucket_Exemplar)(nil), "otlp.HistogramValue.Bucket.Exemplar")
	proto.RegisterType((*StringKeyValuePair)(nil), "otlp.StringKeyValuePair")
	proto.RegisterType((*SummaryValue)(nil), "otlp.SummaryValue")
	proto.RegisterType((*SummaryValue_ValueAtPercentile)(nil), "otlp.SummaryValue.ValueAtPercentile")
}

func init() { proto.RegisterFile("metric_data.proto", fileDescriptor_9a96a8671bd66caf) }

var fileDescriptor_9a96a8671bd66caf = []byte{
	// 1252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x97, 0x5d, 0x6e, 0xdb, 0x46,
	0x10, 0xc7, 0x43, 0x49, 0x96, 0xed, 0x91, 0x23, 0x51, 0xeb, 0x2f, 0x59, 0x8e, 0x53, 0x97, 0x08,
	0x0a, 0x23, 0xa9, 0x99, 0x38, 0x49, 0x03, 0xb4, 0xe8, 0x43, 0xf4, 0x15, 0x5b, 0x89, 0x65, 0xab,
	0x2b, 0xc9, 0x45, 0x9f, 0x04, 0x9a, 0xda, 0x2a, 0x84, 0xc5, 0x0f, 0x90, 0xcb, 0xc0, 0x2a, 0x8a,
	0xa2, 0x8f, 0x0d, 0x7a, 0x86, 0x9e, 0xa5, 0x17, 0x68, 0x2f, 0xd2, 0x87, 0x9c, 0xa1, 0xe0, 0x2e,
	0x49, 0x91, 0xa2, 0xe8, 0x00, 0x2e, 0x10, 0xf4, 0xc5, 0x58, 0xce, 0x7f, 0xe6, 0x37, 0xc3, 0xdd,
	0x99, 0xa5, 0x0c, 0x65, 0x9d, 0x50, 0x5b, 0x53, 0x87, 0x23, 0x85, 0x2a, 0xb2, 0x65, 0x9b, 0xd4,
	0x44, 0x39, 0x93, 0x4e, 0xac, 0xea, 0x06, 0x25, 0x13, 0xe2, 0x89, 0xd3, 0x88, 0x26, 0x11, 0x28,
	0x61, 0xe2, 0x98, 0xae, 0xad, 0x92, 0x0e, 0x0b, 0x74, 0xd0, 0x43, 0x58, 0xb1, 0x7d, 0x53, 0x45,
	0xd8, 0x17, 0x0e, 0x0a, 0x4f, 0x8b, 0xb2, 0x47, 0x90, 0x03, 0x47, 0x1c, 0xea, 0xe8, 0x0b, 0x58,
	0xe6, 0xf9, 0x9c, 0x4a, 0x66, 0x3f, 0x7b, 0x50, 0x78, 0xba, 0xc6, 0x5d, 0x39, 0x0b, 0x07, 0xa2,
	0xf4, 0x77, 0x0e, 0xf2, 0xdc, 0x86, 0x1a, 0xb3, 0x12, 0x89, 0xa3, 0xda, 0x9a, 0x45, 0x4d, 0xdb,
	0xcf, 0xb3, 0x15, 0x0d, 0x6e, 0x86, 0x2a, 0x16, 0xf5, 0x39, 0x4b, 0xac, 0xc6, 0xcc, 0x47, 0x6a,
	0x7c, 0x0d, 0xe2, 0x58, 0x71, 0xc7, 0x64, 0xa8, 0x19, 0xf4, 0xc5, 0x73, 0xf6, 0xf2, 0x95, 0x2c,
	0x8b, 0xb9, 0xcf, 0x63, 0x8e, 0x3d, 0xb5, 0xed, 0x89, 0x7d, 0x4d, 0x27, 0x3d, 0x62, 0x6b, 0xc4,
	0x39, 0xd5, 0x1c, 0x7a, 0x72, 0x07, 0x17, 0xc7, 0xa1, 0xd6, 0x54, 0xa8, 0x82, 0x3a, 0x50, 0xe6,
	0xac, 0x91, 0xe9, 0x5e, 0x4e, 0x08, 0x87, 0xe5, 0x18, 0xec, 0xb3, 0x08, 0xac, 0xc9, 0xd4, 0x04,
	0xad, 0x34, 0x9e, 0x89, 0x0c, 0xd7, 0x05, 0xa4, 0x9a, 0xae, 0x41, 0x89, 0x1d, 0x2d, 0x6e, 0x89,
	0xf1, 0xf6, 0x39, 0xaf, 0xc1, 0xf5, 0xc5, 0xe5, 0x89, 0x6a, 0x44, 0x65, 0xc4, 0x1e, 0xac, 0x07,
	0xc4, 0x68, 0x89, 0x79, 0x86, 0xfc, 0x3c, 0x86, 0x4c, 0x29, 0xb2, 0xac, 0x46, 0x65, 0x06, 0x7d,
	0x05, 0xc5, 0xb7, 0x9a, 0x43, 0xcd, 0xb1, 0xad, 0xe8, 0x9c, 0xb7, 0xcc, 0x78, 0x7b, 0x9c, 0x77,
	0x12, 0x68, 0x09, 0xd6, 0xdd, 0x30, 0x8c, 0x71, 0x5e, 0xc2, 0x9a, 0xe3, 0xea, 0xba, 0xe2, 0xb7,
	0x60, 0x65, 0x85, 0x51, 0x76, 0x39, 0xa5, 0xc7, 0x95, 0x04, 0xa3, 0xe0, 0x87, 0x78, 0x84, 0x7a,
	0x1e, 0x72, 0x5e, 0xa4, 0xf4, 0x57, 0x06, 0xc4, 0xf9, 0x36, 0x41, 0x08, 0x72, 0x86, 0xa2, 0xf3,
	0xa6, 0x5d, 0xc5, 0x6c, 0x8d, 0xf6, 0xa1, 0x10, 0xb4, 0x99, 0x66, 0x1a, 0xac, 0x57, 0x56, 0x71,
	0xd4, 0xe4, 0x45, 0xb9, 0x86, 0x46, 0x59, 0x4b, 0xac, 0x62, 0xb6, 0x46, 0x8f, 0x21, 0x47, 0xa7,
	0x16, 0x61, 0x27, 0x5b, 0x0c, 0x0a, 0x9c, 0xcf, 0x27, 0xf7, 0xa7, 0x16, 0xc1, 0xcc, 0x11, 0xed,
	0x01, 0x4c, 0x94, 0x4b, 0x32, 0x19, 0x5e, 0x91, 0xa9, 0x53, 0x59, 0xda, 0xcf, 0x1e, 0xac, 0xe2,
	0x55, 0x66, 0x79, 0x43, 0xa6, 0x8e, 0xf4, 0x87, 0x00, 0x39, 0xcf, 0x1b, 0x95, 0xa0, 0x30, 0x38,
	0xeb, 0x75, 0x5b, 0x8d, 0xf6, 0xab, 0x76, 0xab, 0x29, 0xde, 0xf1, 0x0c, 0xc7, 0xb5, 0xc1, 0x71,
	0x6b, 0xd8, 0x3e, 0xeb, 0xbf, 0x78, 0x2e, 0x0a, 0x48, 0x84, 0x35, 0x6e, 0x68, 0x9e, 0x0f, 0xea,
	0xa7, 0x2d, 0x31, 0x83, 0xd6, 0xa1, 0xc4, 0x2d, 0x27, 0xed, 0x5e, 0xff, 0xfc, 0x18, 0xd7, 0x3a,
	0x62, 0x16, 0x95, 0xe1, 0x6e, 0xe3, 0x7c, 0x70, 0xd6, 0x6f, 0x61, 0x3f, 0x32, 0x87, 0x10, 0x14,
	0x03, 0x93, 0x1f, 0xbb, 0x84, 0x2a, 0xb0, 0xd1, 0x18, 0x74, 0x06, 0xa7, 0xb5, 0x7e, 0xfb, 0x22,
	0x0a, 0xc8, 0xa3, 0x02, 0x2c, 0xf7, 0x06, 0x9d, 0x4e, 0x0d, 0xff, 0x20, 0x2e, 0x4b, 0xaf, 0xa1,
	0x92, 0x36, 0x04, 0x48, 0x86, 0xdc, 0x44, 0x73, 0x68, 0x45, 0x60, 0xf3, 0x5d, 0x4d, 0x1f, 0x19,
	0xcc, 0xfc, 0xa4, 0x53, 0xd8, 0x49, 0x9d, 0x01, 0x6f, 0x63, 0x23, 0xb0, 0xdd, 0x1b, 0x46, 0xc6,
	0xa7, 0x9d, 0x41, 0x35, 0x7d, 0x02, 0xd0, 0x93, 0x18, 0xee, 0xde, 0x4d, 0x13, 0xe3, 0xf3, 0xba,
	0xb0, 0x7b, 0x43, 0xfb, 0xa3, 0xa3, 0x18, 0x70, 0xef, 0xc6, 0x79, 0xf1, 0x89, 0x27, 0xb0, 0x9d,
	0x32, 0x00, 0xe8, 0x30, 0x46, 0xdb, 0x49, 0x9d, 0x16, 0x9f, 0xd4, 0x84, 0xcd, 0x85, 0x43, 0x80,
	0x1e, 0xc5, 0x38, 0xdb, 0x29, 0xf3, 0xe2, 0x53, 0x7e, 0x82, 0x8d, 0x45, 0xa7, 0x83, 0x9e, 0xc1,
	0x1a, 0x6f, 0xd1, 0x77, 0xca, 0xc4, 0x25, 0x8e, 0x0f, 0x13, 0x39, 0xec, 0xd4, 0x53, 0x2e, 0x3c,
	0x01, 0x17, 0x26, 0xe1, 0xda, 0x41, 0x87, 0x90, 0xb7, 0x4c, 0xcd, 0xa0, 0xc1, 0xf5, 0xbe, 0x39,
	0x7f, 0xfc, 0x3c, 0xc6, 0x77, 0x92, 0x7e, 0x86, 0xcd, 0x85, 0x87, 0x79, 0xbb, 0xe4, 0xf2, 0x5c,
	0xf2, 0xad, 0x44, 0xbb, 0xc4, 0xb3, 0xff, 0x02, 0x5b, 0x8b, 0xcf, 0xfe, 0x76, 0xe9, 0x1f, 0xcf,
	0xa5, 0xdf, 0x4e, 0xb6, 0x57, 0x3c, 0xff, 0xaf, 0x02, 0x6c, 0xa7, 0xf4, 0xca, 0xed, 0x2a, 0x78,
	0x32, 0x57, 0x41, 0x65, 0x41, 0x3f, 0xc6, 0x4b, 0x78, 0x9f, 0x81, 0xf5, 0x05, 0x0d, 0x76, 0xbb,
	0xf4, 0x3d, 0x28, 0x91, 0x6b, 0x6b, 0xa2, 0xa9, 0x1a, 0x1d, 0x5e, 0x9a, 0xae, 0x31, 0x72, 0xfc,
	0x6f, 0xed, 0x41, 0x6a, 0x27, 0xcb, 0x2d, 0x3f, 0xa0, 0xce, 0xfc, 0xbd, 0x2f, 0x28, 0x89, 0x59,
	0xd0, 0x97, 0xe1, 0x3b, 0x65, 0x59, 0x0d, 0x1b, 0x73, 0xac, 0xd8, 0xfb, 0x54, 0x0f, 0xa0, 0x18,
	0x27, 0xa2, 0x2d, 0xc8, 0xfb, 0xb5, 0x78, 0xef, 0x20, 0x60, 0xff, 0xa9, 0x2e, 0x42, 0xf1, 0xd2,
	0x55, 0xaf, 0x08, 0x1d, 0x9a, 0xec, 0x5e, 0x77, 0x24, 0x0a, 0xe5, 0xc4, 0x8c, 0xdc, 0x6e, 0x23,
	0x1e, 0xce, 0x9d, 0x03, 0x8a, 0x4d, 0x60, 0xfc, 0x04, 0xce, 0x01, 0x66, 0x18, 0xb4, 0x01, 0x4b,
	0x2c, 0x91, 0xff, 0x4d, 0xe2, 0x0f, 0xe8, 0x11, 0x94, 0xd9, 0x62, 0xe8, 0x1a, 0x8e, 0x45, 0x54,
	0xed, 0x47, 0x8d, 0x8c, 0xd8, 0xd6, 0xae, 0x60, 0x91, 0x09, 0x83, 0x99, 0x5d, 0xba, 0x80, 0xd2,
	0xdc, 0xb8, 0xa1, 0x43, 0x40, 0x54, 0xd3, 0x89, 0x43, 0x15, 0xdd, 0x1a, 0xba, 0x86, 0x76, 0x6d,
	0x28, 0x86, 0xc9, 0x52, 0x64, 0x71, 0x39, 0x54, 0x06, 0xbe, 0x30, 0x2b, 0x22, 0xc3, 0x3c, 0xf8,
	0x83, 0xf4, 0x3d, 0x88, 0xf3, 0x93, 0xf4, 0x9f, 0xc0, 0x42, 0x00, 0xfe, 0x4d, 0x80, 0x72, 0x62,
	0x48, 0x90, 0x0c, 0xeb, 0x0e, 0x55, 0x6c, 0x3a, 0xf4, 0x30, 0x09, 0x36, 0x93, 0xbc, 0x63, 0x0a,
	0xd9, 0x8b, 0x4b, 0xc9, 0x7c, 0xb4, 0x94, 0x6c, 0xf4, 0x1d, 0xdf, 0x0b, 0x80, 0x92, 0xd3, 0xf2,
	0x49, 0x6b, 0x09, 0xb7, 0xe5, 0xcf, 0x2c, 0x14, 0xe3, 0x5d, 0xfe, 0x09, 0xea, 0x60, 0xbf, 0xe5,
	0x82, 0x3d, 0x61, 0x0f, 0x48, 0x84, 0xac, 0xe3, 0xea, 0xec, 0xa7, 0x8d, 0x80, 0xbd, 0x25, 0xfa,
	0x0a, 0x96, 0xf9, 0xe8, 0xf0, 0x5f, 0x2e, 0xe1, 0x77, 0x39, 0x5e, 0xad, 0x5c, 0x67, 0x3e, 0x38,
	0xf0, 0xad, 0x7e, 0x10, 0x20, 0xcf, 0x6d, 0xb3, 0x4c, 0x42, 0x34, 0xd3, 0x4b, 0x58, 0x21, 0xd7,
	0x44, 0xb7, 0x26, 0x8a, 0xed, 0x5f, 0x1c, 0x0f, 0x6e, 0x00, 0xcb, 0x2d, 0xdf, 0x17, 0x87, 0x51,
	0xd5, 0xdf, 0x05, 0x58, 0x09, 0xcc, 0x8b, 0xbb, 0x2d, 0x65, 0x4f, 0xb2, 0x69, 0x7b, 0xf2, 0x0d,
	0x14, 0x14, 0x4a, 0x15, 0xf5, 0xad, 0x4e, 0x8c, 0xf0, 0x7d, 0xfd, 0x7b, 0xb5, 0x47, 0x6d, 0xcd,
	0x18, 0xbf, 0x21, 0x7c, 0xa2, 0xbb, 0x8a, 0x66, 0xe3, 0xa8, 0xb3, 0xf4, 0x2d, 0xa0, 0xa4, 0x8b,
	0xb7, 0x9f, 0x57, 0x64, 0xea, 0x0f, 0xb8, 0xb7, 0x8c, 0x17, 0x1a, 0x0c, 0xbd, 0xf4, 0x21, 0x03,
	0x6b, 0xd1, 0x1b, 0xe3, 0xff, 0x72, 0xfa, 0x5f, 0xc3, 0x0e, 0x93, 0x86, 0x8a, 0x31, 0x1a, 0x3a,
	0xae, 0x1e, 0xbb, 0x94, 0x96, 0xd8, 0xa5, 0xb4, 0xc5, 0x1c, 0x6a, 0xc6, 0xa8, 0xe7, 0xea, 0x91,
	0xab, 0x09, 0x7d, 0x07, 0x65, 0x8b, 0xd8, 0x2a, 0x31, 0xa8, 0x36, 0x21, 0xc1, 0x8d, 0x9a, 0x67,
	0x5b, 0xfa, 0x20, 0x79, 0x45, 0xca, 0xec, 0x6f, 0x8d, 0x76, 0xc3, 0x10, 0x2c, 0xce, 0xc2, 0xf9,
	0x55, 0x5b, 0x6d, 0x43, 0x39, 0xe1, 0x86, 0xee, 0x03, 0xcc, 0x1c, 0xd9, 0x06, 0x09, 0x38, 0x62,
	0x59, 0xdc, 0x19, 0xf5, 0x13, 0xb8, 0xa7, 0x99, 0xb2, 0x69, 0x11, 0x43, 0x25, 0x86, 0xe3, 0x3a,
	0xfc, 0x3f, 0x5e, 0x99, 0xda, 0x8a, 0x4a, 0xe4, 0x77, 0x47, 0x75, 0xe8, 0x7b, 0xab, 0xae, 0x67,
	0xec, 0x0a, 0xff, 0x64, 0x76, 0xce, 0x2d, 0x62, 0x34, 0xb8, 0x27, 0x33, 0xca, 0x4c, 0x97, 0x2f,
	0x8e, 0x2e, 0xf3, 0x2c, 0xf2, 0xd9, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x26, 0x51, 0x5b, 0x72,
	0x5c, 0x0f, 0x00, 0x00,
}
